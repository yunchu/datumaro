name: Build and upload to internal PyPI

on:
  workflow_dispatch: # run on request (no need for PR)

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'windows-2022']
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Installing python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.11"
          cache: pip
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.15.0
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Set up Python 3.9
        uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566 # v3.1.4
        with:
          python-version: "3.9"
      - name: Install pypa/build
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          path: dist/*.tar.gz

  publish_package:
    name: Publish package
    needs: [build_wheels, build_sdist]
    environment: pypi
    runs-on: [self-hosted, linux, x64, ubuntu20.04]
    permissions: write-all
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - name: Set up Python
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: python -m pip install twine
    - name: Download artifacts
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        # unpacks default artifact into dist/
        # if `name: artifact` is omitted, the action will create extra parent dir
        name: artifact
        path: dist
    # to determine where to publish the source distribution to PyPI or TestPyPI
    - name: Check tag
      id: check-tag
      uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b # v2.0.2
      with:
        text: ${{ github.ref }}
        regex: '^refs/heads/releases/[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+)?$'
    - name: Check dist contents
      run: twine check dist/*
    - name: Publish package dist to internal PyPI
      if: ${{ steps.check-tag.outputs.match != '' }}
      run: |
        export no_proxy=${{ secrets.PYPI_HOST }}
        export REPOSITORY_URL=http://${{ secrets.PYPI_HOST }}:${{ secrets.PYPI_PORT }}
        twine upload --verbose --repository-url $REPOSITORY_URL dist/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
    - name: Publish package distributions to TestPyPI
      if: ${{ steps.check-tag.outputs.match == '' }}
      run: |
        export REPOSITORY_URL=https://test.pypi.org/legacy/
        twine upload --verbose --repository-url $REPOSITORY_URL dist/* -u __token__ -p ${{ secrets.TESTPYPI_API_TOKEN }}
    - name: Clean up dist
      if: ${{ always() }}
      run: |
        if OUTPUT=$(ls | grep -c dist)
        then
          echo "Cleaning up dist directory"
          rm -r dist
        fi
